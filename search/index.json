[{"content":"Vue3快速入门 环境安装 1 2 3 4 5 6 7 sudo apt install nodejs npm # 创建项目过程中需要输入项目名，其余选项都是 No nmp create vue@latest cd 项目名 npm install # 启动项目 npm run dev 开发环境 推荐vscode，同时安装扩展volar\n入门教程推荐 vue官网文档适合速查，小白从零开始难以理解，这里我推荐vue官方互动教程\n改变时触发更新的状态被称为响应式 reactive()只适用于对象(数组和内置类型)\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 \u0026lt;script setup\u0026gt; import { reactive } from \u0026#39;vue\u0026#39; const counter =reactive({ count: 0, count1: 1, count2: 2, }) counter.count = 5 \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;h1\u0026gt;{{ counter.count }} \u0026lt;/h1\u0026gt; \u0026lt;/template\u0026gt; ref()可以接受任何值类型，会返回一个包裹对象，只有在.value属性下暴露内部值，才能进行输出和重新赋值\n在模板中ref返回的对象不需要使用.value，会被自动解包\n1 2 3 4 5 6 7 8 9 10 11 \u0026lt;script setup\u0026gt; import { ref } from \u0026#39;vue\u0026#39; const message = ref(\u0026#34;Hello\u0026#34;) \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;h1\u0026gt;{{ message }} \u0026lt;/h1\u0026gt; \u0026lt;/template\u0026gt; 文本插值 {{ }} 1 2 3 4 \u0026lt;template\u0026gt; \u0026lt;h1\u0026gt;{{ message }} \u0026lt;/h1\u0026gt; \u0026lt;/template\u0026gt; 属性绑定 指令是由 v- 开头的一种特殊属性，它们是vue模板语法的一部分，给属性绑定一个动态值需要v-bind指令：\n1 \u0026lt;div v-bind:id=\u0026#34;dynamicId\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 简写：\n1 2 3 4 \u0026lt;div :id=\u0026#34;dynamicId\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div :class=\u0026#34;dynamicId\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div :hidden=\u0026#34;dynamicId\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; ...... 事件监听 v-on指令监听DOM事件：通过修改ref更新组件状态\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;script setup\u0026gt; import {ref} from \u0026#39;vue\u0026#39; const message = ref(\u0026#34;hello\u0026#34;) const number = ref(\u0026#34;1\u0026#34;) function increment() { message.value = \u0026#34;nihao\u0026#34; number.value++ } \u0026lt;/script\u0026gt; \u0026lt;button v-on:click=\u0026#34;increment\u0026#34;\u0026gt;{{ message }} {{number}}\u0026lt;/button\u0026gt; 简写：\n1 \u0026lt;button @click=\u0026#34;increment\u0026#34;\u0026gt;{{ message }}\u0026lt;/button\u0026gt; 表单绑定 同时使用v-bind和v-on在表单的输入元素创建双向绑定，将输入框内容同步给相应的变量\n1 2 3 4 5 6 7 8 9 10 11 12 13 \u0026lt;script setup\u0026gt; import { ref } from \u0026#39;vue\u0026#39; const text = ref(\u0026#34;\u0026#34;) function onInput(e) { // v-on 处理函数会接收原生 DOM 事件 // 作为其参数。 text.value = e.target.value } \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;input :value=\u0026#34;text\u0026#34; @input=\u0026#34;onInput\u0026#34;\u0026gt; \u0026lt;p\u0026gt;{{ text }}\u0026lt;/p\u0026gt; \u0026lt;/template\u0026gt; 简写：\n1 \u0026lt;input v-model=\u0026#34;display\u0026#34;\u0026gt; ","date":"2024-02-18T09:03:53-05:00","permalink":"https://example.com/p/vue3%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/","title":"Vue3快速入门"},{"content":"迁移博客说明 最近在寻找实习，此前写的博客暂无精力总结改版，烦请见谅！\n","date":"2024-02-17T08:29:42-05:00","permalink":"https://example.com/p/%E8%BF%81%E7%A7%BB%E5%8D%9A%E5%AE%A2%E8%AF%B4%E6%98%8E/","title":"迁移博客说明"},{"content":"安卓手机出厂自带诸多不必要软件,删除后可以优化手机内存占用空间降低功耗，但通过常规手段无法删除部分应用，所以要通过adb删除\ndebian系统安装adb命令\n1 sudo apt install adb centos系统安装adb命令\n1 sudo yum install adb 安装成功后，手机打开开发者设置(各品牌步骤不同，自行搜索)，找到允许adb调试选项\n然后电脑和手机通过数据线连接，命令行中输入adb命令，此时观察手机会出现是否允许adb调试选项，允许 接下来通过命令删除软件\n示例：\n1 2 3 4 5 adb shell pm uninstall -k --user 0 [软件包名] # 删除小米快应用服务框架 adb shell pm uninstall -k --user 0 com.miui.hybrid # 预装应用删除后恢复 adb shell cmd package install-existing [软件包名] 最大的难度是怎么知道软件包名？ 不知道软件包名就无法通过adb卸载，此时推荐开源软件apps_Packages info，没有联网功能还能显示所有软件包名，十分安全。\n可以通过f-droid.org官网下载，也可以点击此处下载\n警告 删除过程中建议谨慎操作，诸如服务框架之类的软件包名卸载后可能导致系统无法正常使用或无法开机，注意判别！操作前进行手机数据备份，避免误删某软件后数据消失\n","date":"2024-02-17T03:55:11-05:00","permalink":"https://example.com/p/%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E5%86%85%E5%AD%98%E4%BC%98%E5%8C%96/","title":"安卓手机内存优化"},{"content":"new和make的区别 new用于分配值类型(整数、浮点数、结构体等)的内存，并返回一个指向该类型零值的指针。 make用于创建切片、映射和通道等引用数据类型，并返回一个已经初始化后的实例。 他们的区别在于new只分配内存，并返回该类型的指针，但不会对该内存进行初始化，需要手动初始化比如\n1 2 m := new(map[string]int) m = make(map[string]int,5) 这些数据结构由于内部构造需要初始化，因此使用make用来初始化他们\n所有defer都会被执行吗 处于false分支的defer不会被执行\n多个defer执行顺序 defer归属函数即将返回时，延迟处理语句按defer逆序执行\nimport后面最后一个元素是包名吗 import指定的是包的路径标识符。包名是代码中使用的标识符，通过导入路径标识 符来确定\n类型断言语法 Interface.(Type)\n类型转换语法 Type(expression)\n为什么Cgo能调用C模块 因为C和Go二进制接口规范(ABI)具有兼容性\nGo语言取反操作 ^x，不支持~x 为什么delect只能用来删map func delete(m map[Type]Type1, key Type) ","date":"2024-02-17T03:52:30-05:00","permalink":"https://example.com/p/go%E8%A7%A3%E7%AD%94/","title":"Go解答"}]